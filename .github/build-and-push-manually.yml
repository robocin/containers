name: Build and Push Dockerfiles manually

on:
  workflow_dispatch:
    inputs:
      full-name:
        type: string
        description: "Dockerfile name with full path (e.g. 'this/folder/image/name.Dockerfile')"
        required: true
      tag:
        type: string
        description: "Docker image tag (e.g. 'latest', '1.0.0', 'pr-123'). 'manual-' will be prepended to the tag"
        required: true

jobs:
  verify-arguments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Assert that arguments are valid
        run: |
          if [[ "${{ github.event.inputs.name }}" == "" ]]; then
            echo "Dockerfile name cannot be empty."
            exit 1
          fi
          if [[ "${{ github.event.inputs.tag }}" == "" ]]; then
            echo "Tag cannot be empty."
            exit 1
          fi
          if [[ ! -f "${{ github.event.inputs.name }}" ]]; then
            echo "Dockerfile '${{ github.event.inputs.name }}' does not exist."
            exit 1
          fi

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Get file name without extension
        id: get-file-name
        run: |
          echo "::set-env name=file-name::$(echo basename '${{ github.event.inputs.name }}' .Dockerfile)"
      - name: Build and Push Dockerfile
        uses: docker/build-push-action@v3
        with:
          file: ${{ github.event.inputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_ID }}/${{ env.file-name }}:manual-${{ github.event.inputs.tag }}
